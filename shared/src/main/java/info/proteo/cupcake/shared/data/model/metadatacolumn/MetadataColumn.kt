package info.proteo.cupcake.shared.data.model.metadatacolumn

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

@JsonClass(generateAdapter = true)
data class MetadataColumn(
    val id: Int,
    val name: String,
    val type: String?,
    @Json(name = "column_position") val columnPosition: Int?,
    val value: String?,
    @Json(name = "stored_reagent") val storedReagent: Int?,
    @Json(name = "created_at") val createdAt: String?,
    @Json(name = "updated_at") val updatedAt: String?,
    @Json(name = "not_applicable") val notApplicable: Boolean = false,
    val mandatory: Boolean = false,
    @Json(name = "modifiers") val modifiers: List<String>? = emptyList<String>(), // JSON string

    val readonly: Boolean = false,
    val hidden: Boolean = false,
    @Json(name = "auto_generated") val autoGenerated: Boolean = false
)

@JsonClass(generateAdapter = true)
data class FavouriteMetadataOption(
    val id: Int,
    val user: Int,
    val name: String?,
    val type: String?,
    val value: String?,
    @Json(name = "display_value") val displayValue: String?,
    @Json(name = "service_lab_group") val serviceLabGroup: Int?,
    @Json(name = "lab_group") val labGroup: Int?,
    val preset: Int?,
    @Json(name = "created_at") val createdAt: String?,
    @Json(name = "updated_at") val updatedAt: String?,
    @Json(name = "is_global") val isGlobal: Boolean
)
@JsonClass(generateAdapter = true)
data class Preset(
    val id: Int,
    val name: String?,
    val user: Int?,
    @Json(name = "created_at") val createdAt: String?,
    @Json(name = "updated_at") val updatedAt: String?
)
